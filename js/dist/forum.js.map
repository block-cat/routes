{"version":3,"sources":["webpack://@block-cat/routes/webpack/bootstrap","webpack://@block-cat/routes/./forum.js","webpack://@block-cat/routes/./src/forum/index.js","webpack://@block-cat/routes/./src/forum/settings/changePaths.js","webpack://@block-cat/routes/external \"flarum.core.compat['common/Application']\"","webpack://@block-cat/routes/external \"flarum.core.compat['common/components/AlertManager']\"","webpack://@block-cat/routes/external \"flarum.core.compat['common/components/ModalManager']\"","webpack://@block-cat/routes/external \"flarum.core.compat['common/utils/Drawer']\"","webpack://@block-cat/routes/external \"flarum.core.compat['common/utils/ScrollListener']\"","webpack://@block-cat/routes/external \"flarum.core.compat['common/utils/liveHumanTimes']\"","webpack://@block-cat/routes/external \"flarum.core.compat['common/utils/mapRoutes']\"","webpack://@block-cat/routes/external \"flarum.core.compat['extend']\"","webpack://@block-cat/routes/external \"flarum.core.compat['forum/ForumApplication']\""],"names":["app","initializers","add","changePaths","routes","routesCustom","JSON","parse","data","resources","attributes","Object","keys","map","key","hasOwnProperty","path"],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA,wC;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAA,GAAG,CAACC,YAAJ,CAAiBC,GAAjB,CAAqB,kBAArB,EAAyC,YAAM;AAC7C;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACAC,uEAAW;AACZ,CAxCD,E;;;;;;;;;;;;ACXA;AAAe,2EAAY;AACvB;AACA,MAAMC,MAAM,GAAGJ,GAAG,CAACI,MAAnB,CAFuB,CAGvB;;AACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWP,GAAG,CAACQ,IAAJ,CAASC,SAAT,CAAmB,CAAnB,EAAsBC,UAAtB,CAAiC,yBAAjC,CAAX,CAArB,CAJuB,CAMvB;;AACAC,QAAM,CAACC,IAAP,CAAYR,MAAZ,EAAoBS,GAApB,CAAwB,UAACC,GAAD,EAAS;AAC7B;AACA,QAAIT,YAAY,CAACU,cAAb,CAA4BD,GAA5B,CAAJ,EAAsC;AAClC;AACA,UAAIT,YAAY,CAACS,GAAD,CAAZ,CAAkBE,IAAlB,KAA2B,EAA/B,EAAmC;AAC/B;AACAhB,WAAG,CAACI,MAAJ,CAAWU,GAAX,EAAgBE,IAAhB,GAAuBX,YAAY,CAACS,GAAD,CAAZ,CAAkBE,IAAzC;AACH;AACJ;AACJ,GATD;AAUH;AAAA,C;;;;;;;;;;;ACjBD,0D;;;;;;;;;;;ACAA,sE;;;;;;;;;;;ACAA,sE;;;;;;;;;;;ACAA,2D;;;;;;;;;;;ACAA,mE;;;;;;;;;;;ACAA,mE;;;;;;;;;;;ACAA,8D;;;;;;;;;;;ACAA,8C;;;;;;;;;;;ACAA,8D","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./forum.js\");\n","export * from './src/forum';\n","import ForumApplication from 'flarum/forum/ForumApplication';\r\nimport Application from 'flarum/common/Application';\r\nimport { extend, override } from 'flarum/extend';\r\nimport changePaths from './settings/changePaths';\r\nimport ModalManager from 'flarum/common/components/ModalManager';\r\nimport AlertManager from 'flarum/common/components/AlertManager';\r\nimport Drawer from 'flarum/common/utils/Drawer';\r\nimport mapRoutes from 'flarum/common/utils/mapRoutes';\r\nimport ScrollListener from 'flarum/common/utils/ScrollListener';\r\nimport liveHumanTimes from 'flarum/common/utils/liveHumanTimes';\r\n\r\napp.initializers.add('block-cat/routes', () => {\r\n  // override(Application.prototype, 'mount', function(original) {\r\n  //   this.routes['discussion'].path = '/articol/:id';\r\n  //   this.routes['discussion.near'].path = '/articol/:id/:near';\r\n  //   // this.routes['settings'].path = '/setari';\r\n  //   // console.log(arguments);\r\n\r\n\r\n  //   // An object with a callable view property is used in order to pass arguments to the component; see https://mithril.js.org/mount.html\r\n  //   m.mount(document.getElementById('modal'), { view: () => ModalManager.component({ state: this.modal }) });\r\n  //   m.mount(document.getElementById('alerts'), { view: () => AlertManager.component({ state: this.alerts }) });\r\n\r\n  //   this.drawer = new Drawer();\r\n\r\n  //   m.route(document.getElementById('content'), arguments[1] + '/', mapRoutes(this.routes, arguments[1]));\r\n\r\n  //   // Add a class to the body which indicates that the page has been scrolled\r\n  //   // down. When this happens, we'll add classes to the header and app body\r\n  //   // which will set the navbar's position to fixed. We don't want to always\r\n  //   // have it fixed, as that could overlap with custom headers.\r\n  //   const scrollListener = new ScrollListener((top) => {\r\n  //     const $app = $('#app');\r\n  //     const offset = $app.offset().top;\r\n\r\n  //     $app.toggleClass('affix', top >= offset).toggleClass('scrolled', top > offset);\r\n  //     $('.App-header').toggleClass('navbar-fixed-top', top >= offset);\r\n  //   });\r\n\r\n  //   scrollListener.start();\r\n  //   scrollListener.update();\r\n\r\n  //   $(() => {\r\n  //     $('body').addClass('ontouchstart' in window ? 'touch' : 'no-touch');\r\n  //   });\r\n\r\n  //   liveHumanTimes();\r\n  // });\r\n\r\n  // console.log(Application);\r\n  changePaths();\r\n});\r\n","export default function () {\r\n    // get all used Flarum routes\r\n    const routes = app.routes;\r\n    // get all routes defined in admin page\r\n    const routesCustom = JSON.parse(app.data.resources[0].attributes[\"block-cat.defaultRoutes\"]);\r\n    \r\n    // map all keys from Flarum routes\r\n    Object.keys(routes).map((key) => {\r\n        // check if key is specified in admin page\r\n        if (routesCustom.hasOwnProperty(key)) {\r\n            // check if key from admin page has value\r\n            if (routesCustom[key].path !== \"\") {\r\n                // set new path for specific key\r\n                app.routes[key].path = routesCustom[key].path;\r\n            }\r\n        }\r\n    });\r\n};\r\n","module.exports = flarum.core.compat['common/Application'];","module.exports = flarum.core.compat['common/components/AlertManager'];","module.exports = flarum.core.compat['common/components/ModalManager'];","module.exports = flarum.core.compat['common/utils/Drawer'];","module.exports = flarum.core.compat['common/utils/ScrollListener'];","module.exports = flarum.core.compat['common/utils/liveHumanTimes'];","module.exports = flarum.core.compat['common/utils/mapRoutes'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['forum/ForumApplication'];"],"sourceRoot":""}